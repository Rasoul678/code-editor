{"version":3,"file":"static/js/275.8775ef11.chunk.js","mappings":"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","sources":["components/icons/Plus.tsx","webpack://rasoulmedia-editor/./src/components/add-cell/add-cell.module.css?38d0","components/add-cell/index.tsx","components/icons/Prettier.tsx","components/icons/Delete.tsx","components/icons/Down.tsx","components/icons/Up.tsx","components/action-bar/index.tsx","webpack://rasoulmedia-editor/./src/components/code-editor/code-editor.module.css?ff8f","components/code-editor/index.tsx","constant/index.ts","webpack://rasoulmedia-editor/./src/components/preview/preview.module.css?4363","components/preview/index.tsx","webpack://rasoulmedia-editor/./src/components/resizable/resizable.module.css?ee16","components/resizable/Handle.tsx","components/resizable/index.tsx","webpack://rasoulmedia-editor/./src/components/code-cell/code-cell.module.css?f94f","webpack://rasoulmedia-editor/./src/components/progress-bar/progress.module.css?ecba","components/progress-bar/index.tsx","components/code-cell/index.tsx","hooks/useCumulativeCode.ts","components/markdown-editor/index.tsx","hooks/useOnClickOutside.ts","components/cell-list-item/index.tsx","components/cell-list/index.tsx","hooks/useBundlerService.ts"],"sourcesContent":["import React from \"react\";\nimport { BsPlusLg } from \"react-icons/bs\";\n\ninterface IProps extends React.DOMAttributes<SVGElement> {}\n\nconst Plus: React.FC<IProps> = (props) => {\n  return <BsPlusLg size={16} style={{margin: '0 0.3rem'}} title=\"format code\" {...props} />;\n};\n\nexport default Plus;\n","// extracted by mini-css-extract-plugin\nexport default {\"addList\":\"add-cell_addList__ljaye\",\"addList__buttons\":\"add-cell_addList__buttons__xMzq9\",\"divider\":\"add-cell_divider__zGMPR\"};","import React from \"react\";\nimport Plus from \"../icons/Plus\";\nimport style from \"./add-cell.module.css\";\nimport { useStore } from \"store/store\";\n\n\ninterface IProps {\n  previousCellID?: string | null;\n}\n\nconst AddCell: React.FC<IProps> = ({ previousCellID = null }) => {\n  const { actions } = useStore();\n\n  return (\n    <div className={style.addList}>\n      <div className={style.addList__buttons}>\n        <button\n          title=\"add code\"\n          className=\"button is-primary is-rounded is-small\"\n          onClick={() => actions.insertCellAfter(\"code\", previousCellID)}\n        >\n          <Plus /> Code\n        </button>\n        <button\n          title=\"add text\"\n          className=\"button is-primary is-rounded is-small\"\n          onClick={() => actions.insertCellAfter(\"text\", previousCellID)}\n        >\n          <Plus /> Text\n        </button>\n      </div>\n      <div className={style.divider}></div>\n    </div>\n  );\n};\n\nexport default AddCell;\n","import React from \"react\";\nimport { SiPrettier } from \"react-icons/si\";\n\ninterface IProps extends React.DOMAttributes<SVGElement> {}\n\nconst Prettier: React.FC<IProps> = (props) => {\n  return <SiPrettier fill=\"orange\" size={20} title=\"format code\" {...props} />;\n};\n\nexport default Prettier;\n","import React from \"react\";\nimport { BsFillXSquareFill } from \"react-icons/bs\";\n\ninterface IProps extends React.DOMAttributes<SVGElement> {}\n\nexport const Delete: React.FC<IProps> = (props) => {\n  return <BsFillXSquareFill size={20} title='delete' color=\"crimson\" {...props} />;\n};\n","import React from \"react\";\nimport { BsArrowDownSquareFill } from \"react-icons/bs\";\n\ninterface IProps extends React.DOMAttributes<SVGElement> {}\n\nexport const Down: React.FC<IProps> = (props) => {\n  return <BsArrowDownSquareFill size={20} title='move down' color=\"orange\" {...props} />;\n};\n","import React from \"react\";\nimport { BsArrowUpSquareFill } from \"react-icons/bs\";\n\ninterface IProps extends React.DOMAttributes<SVGElement> {}\n\nexport const Up: React.FC<IProps> = (props) => {\n  return <BsArrowUpSquareFill size={20} title='move up' color='orange' {...props} />;\n};\n","import React from \"react\";\nimport { Delete, Down, Up } from \"../icons\";\nimport { useStore } from \"store/store\";\n\ninterface IProps {\n  id: string;\n}\n\nconst ActionBar: React.FC<IProps> = ({ id }) => {\n  const { actions } = useStore();\n\n  return (\n    <>\n      <Up onClick={() => actions.moveCell(\"up\", id)} />\n      <Down onClick={() => actions.moveCell(\"down\", id)} />\n      <Delete onClick={() => actions.deleteCell(id)} />\n    </>\n  );\n};\n\nexport default ActionBar;\n","// extracted by mini-css-extract-plugin\nexport default {\"editorWrapper\":\"code-editor_editorWrapper__TbiVs\",\"formatterButton\":\"code-editor_formatterButton__x1g7B\"};","import \"./editor-syntax.css\";\nimport editorStyle from \"./code-editor.module.css\";\nimport React, {\n  memo,\n  PropsWithChildren,\n  useCallback,\n  useId,\n  useRef,\n} from \"react\";\nimport MonacoEditor, { OnMount } from \"@monaco-editor/react\";\nimport monaco from \"monaco-editor/esm/vs/editor/editor.api\";\nimport prettier from \"prettier\";\nimport parser from \"prettier/parser-babel\";\nimport {\n  MonacoJsxSyntaxHighlight,\n  getWorker,\n} from \"monaco-jsx-syntax-highlight\";\nimport Prettier from \"../icons/Prettier\";\n\ninterface IProps extends PropsWithChildren {\n  defaultValue: string;\n  onChange: (value: string) => void;\n}\n\nconst CodeEditor: React.FC<IProps> = (props) => {\n  const { defaultValue, onChange } = props;\n  const id = useId();\n\n  const editorRef = useRef<monaco.editor.IStandaloneCodeEditor | null>(null);\n\n  const handleEditorDidMount: OnMount = useCallback(\n    (editor, monaco) => {\n      editorRef.current = editor;\n\n      monaco.languages.typescript.typescriptDefaults.setCompilerOptions({\n        jsx: monaco.languages.typescript.JsxEmit.Preserve,\n        target: monaco.languages.typescript.ScriptTarget.ES2020,\n        esModuleInterop: true,\n        moduleResolution:\n          monaco.languages.typescript.ModuleResolutionKind.NodeJs,\n      });\n\n      const monacoJsxSyntaxHighlight = new MonacoJsxSyntaxHighlight(\n        getWorker(),\n        monaco\n      );\n\n      const { highlighter, dispose } =\n        monacoJsxSyntaxHighlight.highlighterBuilder({\n          editor: editor,\n        });\n\n      //* init highlight\n      highlighter();\n\n      editor.onDidChangeModelContent(() => {\n        //* content change, highlight\n        highlighter();\n\n        //* content change, build\n        const value = editor.getValue();\n        onChange?.(value);\n      });\n\n      formatCode(defaultValue);\n      return dispose;\n    },\n    [defaultValue, onChange]\n  );\n\n  const formatCode = (unformatted: string | undefined) => {\n    if (!unformatted) return;\n\n    //* format that value\n    const formatted = prettier\n      .format(unformatted, {\n        parser: \"babel\",\n        plugins: [parser],\n        useTabs: false,\n        singleQuote: false,\n        semi: true,\n      })\n      .replace(/\\n$/, \"\");\n\n    //* Set formatted value back in the editor\n    editorRef.current?.setValue(formatted);\n  };\n\n  const onClickFormat = () => {\n    //* Get current value from editor\n    const unformatted = editorRef.current?.getValue();\n\n    formatCode(unformatted);\n  };\n\n  return (\n    <div className={editorStyle.editorWrapper}>\n      <div\n        className={`${editorStyle.formatterButton}`}\n        onClick={onClickFormat}\n      >\n        <Prettier />\n      </div>\n      <MonacoEditor\n        className={\"editor\"}\n        height=\"100%\"\n        language=\"javascript\"\n        path={`file:///${id}-index.tsx`}\n        theme=\"vs-dark\"\n        defaultValue={defaultValue}\n        onMount={handleEditorDidMount}\n        options={{\n          wordWrap: \"on\", //* Make word to  wrap\n          minimap: {\n            enabled: false, //* Disable minimap\n          },\n          showUnused: true, //* Don't fade unused statements\n          folding: false, //* Collapse left margin of the lines\n          lineNumbersMinChars: 3, //* Decrease right side of the line number\n          fontSize: 18, //* font size\n          scrollBeyondLastLine: true,\n          automaticLayout: true, //* Auto adjust for resizing\n          tabSize: 2, //* Tab size inside editor\n          lineHeight: 30, //* Line height\n        }}\n      />\n    </div>\n  );\n};\n\nexport default memo(CodeEditor);\n","export const IFRAME_SRCDOC = `\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>MeBox</title>\n    </head>\n    <body style='background-color: #fff;'>\n        <div id=\"root\"></div>\n        <script>\n            const handleError = (error) => {\n                const root = document.querySelector('#root');\n                root.innerHTML = '<div style=\"color: crimson;\"><h4>Runtime Error:</h4>' + error + '</div>';\n                console.error(error);\n            };\n\n            // async error handling\n            window.addEventListener('error', (event) => {\n                // cancel default behavior\n                event.preventDefault();\n                handleError(event.error);\n            });\n\n            // sync error handling\n            window.addEventListener(\"message\", (event) => {\n                try{\n                    eval(event.data);\n                } catch(error){\n                    handleError(error);\n                }\n            }, false);\n        </script>\n    </body>\n    </html>\n`;\n","// extracted by mini-css-extract-plugin\nexport default {\"preview__iframe\":\"preview_preview__iframe__uGyPc\",\"preview__error\":\"preview_preview__error__hZQFJ\"};","import React, { memo, useEffect, useId, useRef } from \"react\";\nimport { IFRAME_SRCDOC } from \"../../constant\";\nimport style from \"./preview.module.css\";\n\ninterface IProps {\n  code: string;\n  err: string;\n}\n\nconst Preview: React.FC<IProps> = ({ code, err }) => {\n  const id = useId();\n  const ref = useRef<HTMLIFrameElement>(null);\n\n  useEffect(() => {\n    if (err) return;\n\n    ref.current!.srcdoc = IFRAME_SRCDOC;\n\n    //* Because it takes time to sets iframe's srcDoc,\n    //* we must wait a litle and then post a message!!\n    setTimeout(() => {\n      ref.current!.contentWindow!.postMessage(code, \"*\");\n    }, 50);\n  }, [code, err]);\n\n  if (err) {\n    return (\n      <div className={style.preview__error}>\n        <b>Compile Error:</b> <br /> {err}\n      </div>\n    );\n  }\n\n  return (\n    <iframe\n      ref={ref}\n      title={`preview-${id}`}\n      sandbox=\"allow-scripts\"\n      srcDoc={IFRAME_SRCDOC}\n      className={style.preview__iframe}\n    />\n  );\n};\n\nexport default memo(Preview);\n","// extracted by mini-css-extract-plugin\nexport default {\"resizable__Hhandle\":\"resizable_resizable__Hhandle__FOCPE\",\"resizable__Vhandle\":\"resizable_resizable__Vhandle__OHrsV\"};","import style from \"./resizable.module.css\";\ninterface IProps {\n  direction: \"horizontal\" | \"vertical\";\n}\nconst Handle: React.FC<IProps> = ({ direction }) => {\n  return (\n    <div\n      className={\n        direction === \"horizontal\"\n          ? style.resizable__Hhandle\n          : style.resizable__Vhandle\n      }\n    >\n      <div>\n        <span>.</span>\n        <span>.</span>\n        <span>.</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Handle;\n","import React, { PropsWithChildren } from \"react\";\nimport { Resizable } from \"re-resizable\";\nimport Handle from \"./Handle\";\n\ninterface IProps extends PropsWithChildren {\n  direction: \"horizontal\" | \"vertical\";\n  width?: string | number;\n  maxWidth?: string | number;\n}\n\nconst ResizableBox: React.FC<IProps> = (props) => {\n  const { direction, children, width = \"100%\", maxWidth = \"100%\" } = props;\n\n  return (\n    <Resizable\n      defaultSize={{\n        width,\n        height: \"auto\",\n      }}\n      minWidth=\"30%\"\n      maxWidth={maxWidth}\n      handleComponent={{\n        right: <Handle direction=\"vertical\" />,\n        bottom: <Handle direction=\"horizontal\" />,\n      }}\n      enable={{\n        ...(direction === \"horizontal\" ? { right: true } : { bottom: true }),\n      }}\n      minHeight=\"10vh\"\n      maxHeight=\"80vh\"\n    >\n      {children}\n    </Resizable>\n  );\n};\n\nexport default ResizableBox;\n","// extracted by mini-css-extract-plugin\nexport default {\"cell__wrapper\":\"code-cell_cell__wrapper__VnWau\"};","// extracted by mini-css-extract-plugin\nexport default {\"progress__wrapper\":\"progress_progress__wrapper__2FXQd\",\"fadeIn\":\"progress_fadeIn__qU-Gi\"};","import React from \"react\";\nimport style from './progress.module.css'\n\ninterface IProps {}\n\nconst ProgressBar: React.FC<IProps> = (props) => {\n  return (\n    <div className={style.progress__wrapper}>\n      <progress className=\"progress is-small is-primary\" max=\"100\">Loading</progress>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import { useEffect } from \"react\";\nimport CodeEditor from \"../code-editor\";\nimport Preview from \"../preview\";\nimport ResizableBox from \"../resizable\";\nimport style from \"./code-cell.module.css\";\nimport { Cell } from \"../../state/action-creators\";\nimport ProgressBar from \"../progress-bar\";\nimport { useCumulativeCode } from \"../../hooks/useCumulativeCode\";\nimport { useStore } from \"store/store\";\n\ninterface IProps {\n  cell: Cell;\n}\n\nconst CodeCell: React.FC<IProps> = ({ cell }) => {\n  const { content, id } = cell;\n  const { actions, store } = useStore();\n\n  const { updateCell, createBundle } = actions;\n  const bundle = store.bundles[id];\n\n  const cumulativeCode = useCumulativeCode(cell.id);\n\n  useEffect(() => {\n    if (!bundle) {\n      createBundle({ id, input: cumulativeCode });\n\n      return;\n    }\n    const timer = setTimeout(async () => {\n      createBundle({ id, input: cumulativeCode });\n    }, 600);\n\n    return () => {\n      clearTimeout(timer);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cumulativeCode, id, createBundle]);\n\n  return (\n    <ResizableBox direction=\"vertical\">\n      <div className={style.cell__wrapper}>\n        <ResizableBox direction=\"horizontal\" width={\"50%\"} maxWidth={\"70%\"}>\n          <CodeEditor\n            defaultValue={content}\n            onChange={(value) => updateCell(value, id)}\n          />\n        </ResizableBox>\n        {!bundle || bundle.bundling ? (\n          <ProgressBar />\n        ) : (\n          <Preview code={bundle.code} err={bundle.error} />\n        )}\n      </div>\n    </ResizableBox>\n  );\n};\n\nexport default CodeCell;\n","import { useStore } from \"store/store\";\n\nexport const useCumulativeCode = (cellID: string) => {\n  const { store } = useStore();\n  const { data, order } = store.cells;\n  const orderedCells = order.map((id: string) => data[id]);\n\n  const showFunc = `\n      import _React from 'react';\n      import _ReactDOM from 'react-dom';\n\n      var show = (value) => {\n      const rootElement = document.querySelector('#root');\n      const root = _ReactDOM.createRoot(rootElement);\n\n      if(typeof value === 'object'){\n          if(value.$$typeof && value.props){\n          root.render(value);\n          }else{\n          rootElement.innerHTML = JSON.stringify(value);\n          }\n      }else{\n          rootElement.innerHTML = value;\n      }\n\n      }\n  `;\n\n  const showFuncNoop = \"var show = () => {}\";\n\n  const cumulativeCode = [];\n\n  for (let c of orderedCells) {\n    if (c.type === \"code\") {\n      if (c.id === cellID) {\n        cumulativeCode.push(showFunc);\n      } else {\n        cumulativeCode.push(showFuncNoop);\n      }\n\n      cumulativeCode.push(c.content);\n    }\n\n    if (c.id === cellID) break;\n  }\n\n  return cumulativeCode.join(\"\\n\");\n};\n","import { useRef, useState } from \"react\";\nimport MDEditor, { MDEditorProps } from \"@uiw/react-md-editor\";\nimport rehypeSanitize from \"rehype-sanitize\";\nimport { useOnClickOutside } from \"../../hooks/useOnClickOutside\";\nimport \"./markdown.css\";\nimport { Cell } from \"../../state/action-creators\";\nimport { useStore } from \"store/store\";\n\ninterface IProps {\n  cell: Cell;\n}\n\nconst MarkdownEditor: React.FC<IProps> = ({ cell: { content, id } }) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const [isEditing, setIsEditing] = useState(false);\n\n  const { actions } = useStore();\n\n  useOnClickOutside(ref, () => setIsEditing(false));\n\n  const handleChangeText: MDEditorProps[\"onChange\"] = (value) => {\n    actions.updateCell(value || \"\", id);\n  };\n\n  return (\n    <div>\n      {isEditing && (\n        <div ref={ref}>\n          <MDEditor\n            value={content}\n            onChange={handleChangeText}\n            previewOptions={{\n              rehypePlugins: [[rehypeSanitize]],\n            }}\n          />\n        </div>\n      )}\n\n      {!isEditing && (\n        <div className=\"card\" onClick={() => setIsEditing(true)}>\n          <div className=\"card-content\">\n            <MDEditor.Markdown\n              source={content || 'Click to edit!'}\n              style={{ whiteSpace: \"pre-wrap\" }}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MarkdownEditor;\n","import { RefObject, useEffect } from \"react\";\n\ntype Handler = (event: MouseEvent) => void;\n\nexport const useOnClickOutside = <T extends HTMLElement = HTMLElement>(\n  ref: RefObject<T>,\n  handler: Handler,\n  mouseEvent: \"mousedown\" | \"mouseup\" = \"mousedown\"\n): void => {\n  useEffect(() => {\n    function callback(event: MouseEvent) {\n      const el = ref?.current;\n\n      //! Do nothing if clicking ref's element or descendent elements\n      if (!el || el.contains(event.target as Node)) {\n        return;\n      }\n\n      handler(event);\n    }\n\n    document.addEventListener(mouseEvent, callback, { capture: true });\n\n    //* clean up\n    return () => {\n      document.removeEventListener(mouseEvent, callback, { capture: true });\n    };\n  });\n};\n\n","import React, { CSSProperties } from \"react\";\nimport { Cell } from \"../../state/action-creators\";\nimport ActionBar from \"../action-bar\";\nimport CodeCell from \"../code-cell\";\nimport MarkdownEditor from \"../markdown-editor\";\n\nconst style: CSSProperties = {\n  position: \"absolute\",\n  top: \"0\",\n  right: \"calc(50% - 2.7rem)\",\n  display: \"flex\",\n  gap: \"0.2rem\",\n  margin: \"0.2rem\",\n  zIndex: \"10\",\n  opacity: 1,\n};\n\ninterface IProps {\n  cell: Cell;\n}\n\nconst CellListItem: React.FC<IProps> = ({ cell }) => {\n  return (\n    <div style={{ position: \"relative\", marginBottom: \"2.5rem\" }}>\n      {cell.type === \"code\" ? (\n        <>\n          <div style={{ ...style, top: \"-1.5rem\" }}>\n            <ActionBar id={cell.id} />\n          </div>\n          <CodeCell cell={cell} />\n        </>\n      ) : (\n        <>\n          <div style={{ ...style }}>\n            <ActionBar id={cell.id} />\n          </div>\n          <MarkdownEditor cell={cell} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default CellListItem;\n","import React, { Fragment } from \"react\";\nimport AddCell from \"../add-cell\";\nimport CellListItem from \"../cell-list-item\";\nimport { useStore } from \"store/store\";\nimport { Cell } from \"../../state/action-creators\";\n\ninterface IProps {}\n\nconst CellList: React.FC<IProps> = (props) => {\n  const { store } = useStore();\n  const {\n    cells: { order, data },\n  } = store;\n\n  const cells = order.map((id: string) => data[id]);\n\n  return (\n    <div>\n      <AddCell />\n      {cells.map((cell: Cell) => (\n        <Fragment key={cell.id}>\n          <CellListItem cell={cell} />\n          <AddCell previousCellID={cell.id} />\n        </Fragment>\n      ))}\n    </div>\n  );\n};\n\nexport default CellList;\n","import { useEffect, useRef, useState } from \"react\";\nimport esbuild from \"esbuild-wasm\";\n\nexport const useBundlerService = () => {\n  const serviceRef = useRef(false);\n  const [isReady, setIsReady] = useState(false);\n\n  const startService = async () => {\n    await esbuild.initialize({\n      worker: true,\n      wasmURL: \"https://unpkg.com/esbuild-wasm@0.15.16/esbuild.wasm\",\n    });\n  };\n\n  useEffect(() => {\n    if (!serviceRef.current) {\n      try {\n        startService();\n        serviceRef.current = true;\n        setIsReady(true);\n      } catch (error) {\n        throw error;\n      }\n    }\n  }, []);\n\n  return isReady;\n};\n"],"names":["props","size","style","margin","title","previousCellID","actions","useStore","className","onClick","insertCellAfter","fill","Delete","color","Down","Up","id","moveCell","deleteCell","CodeEditor","defaultValue","onChange","useId","editorRef","useRef","handleEditorDidMount","useCallback","editor","monaco","current","languages","typescript","typescriptDefaults","setCompilerOptions","jsx","JsxEmit","Preserve","target","ScriptTarget","ES2020","esModuleInterop","moduleResolution","ModuleResolutionKind","NodeJs","MonacoJsxSyntaxHighlight","getWorker","highlighterBuilder","highlighter","dispose","onDidChangeModelContent","value","getValue","formatCode","unformatted","formatted","prettier","parser","plugins","useTabs","singleQuote","semi","replace","setValue","editorStyle","height","language","path","theme","onMount","options","wordWrap","minimap","enabled","showUnused","folding","lineNumbersMinChars","fontSize","scrollBeyondLastLine","automaticLayout","tabSize","lineHeight","memo","IFRAME_SRCDOC","Preview","code","err","ref","useEffect","srcdoc","setTimeout","contentWindow","postMessage","sandbox","srcDoc","direction","children","width","maxWidth","Resizable","defaultSize","minWidth","handleComponent","right","bottom","enable","minHeight","maxHeight","max","cell","content","store","updateCell","createBundle","bundle","bundles","cumulativeCode","cellID","cells","data","orderedCells","order","map","c","type","push","join","useCumulativeCode","timer","input","clearTimeout","bundling","error","useState","isEditing","setIsEditing","handler","mouseEvent","callback","event","el","contains","document","addEventListener","capture","removeEventListener","useOnClickOutside","previewOptions","rehypePlugins","rehypeSanitize","source","whiteSpace","position","top","display","gap","zIndex","opacity","marginBottom","Fragment","useBundlerService","serviceRef","isReady","setIsReady","startService","esbuild","worker","wasmURL"],"sourceRoot":""}